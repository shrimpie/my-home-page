{"version":3,"sources":["components/SideBar.js","components/NavBar.js","components/Home.js","components/AboutMe.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","react_default","a","createElement","Fragment","id","className","src","alt","react_router_dom","to","href","target","rel","data-target","Navbar","src_components_SideBar","Home","AboutMe","App","components_NavBar","react_router","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dad81ee5.chunk.js","sourcesContent":["\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './SideBar.scss';\n\nconst SideBar = () => {\n\n\treturn (\n    <React.Fragment>\n  \t\t<ul id=\"slide-out\" className=\"sidenav show-on-med-and-down\">\n        <li>\n          <div className=\"user-view\">\n            <div className=\"background\">\n              <img src=\"images/office.jpg\" alt=\"background\" />\n            </div>\n            <Link to=\"/\">\n              <img className=\"circle\" src=\"images/me.png\" alt=\"me\" />\n            </Link>\n            <a href=\"/\">\n              <span className=\"white-text name\">Zhenyu Yang</span>\n            </a>\n            <a href=\"https://github.com/shrimpie\" target=\"_blank\"\n               rel=\"noopener noreferrer\">\n              <span className=\"white-text github\">GitHub</span>\n            </a>\n            <a href=\"https://www.linkedin.com/in/zhenyu-yang-150638133/\" \n               target=\"_blank\" rel=\"noopener noreferrer\">\n              <span className=\"white-text linkedin\">LinkedIn</span>\n            </a>\n            <Link to=\"/\">\n              <span className=\"white-text email\">andyoungnyc@gmail.com</span>\n            </Link>\n          </div>\n        </li>\n\n        <li>\n          <Link to=\"/\"><i className=\"material-icons\">home</i>Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about-me\">\n            <i className=\"material-icons\">person</i>About Me\n          </Link>\n        </li>\n        <li><div className=\"divider\"></div></li>\n        <li><a href=\"#!\" className=\"subheader\">Projects</a></li>\n        <li>\n          <Link to=\"/api-example\" className=\"waves-effect\">\n            API example\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/meeting-example\" className=\"waves-effect\">\n            Meeting example\n          </Link>\n        </li>\n      </ul>\n      <a href=\"#!\" data-target=\"slide-out\" className=\"sidenav-trigger\">\n        <i className=\"material-icons\">menu</i>\n      </a>\n    </React.Fragment>\n\t)\n}\n\nexport default SideBar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SideBar from './SideBar';\nimport './NavBar.scss';\n\nconst Navbar = () => {\n  return (\n    <React.Fragment>\n\n      <ul id=\"dropdown1\" className=\"dropdown-content\">\n        <li><Link to=\"/\">Home</Link></li>\n        <li><Link to=\"/\">Home</Link></li>\n        <li className=\"divider\"></li>\n        <li><Link to=\"/\">Home</Link></li>\n      </ul>\n\n      <nav className=\"indigo lighten-2\">\n\n        <SideBar />\n\n        <div className=\"nav-wrapper\">\n          <Link to=\"/\" className=\"brand-logo\">Learning React</Link>\n          <ul className=\"right hide-on-med-and-down\">\n            <li><Link to=\"/\">Home</Link></li>\n            <li><Link to=\"/about-me\">About Me</Link></li>\n            <li>\n              <a className=\"dropdown-trigger\" \n                 href=\"#!\" \n                 data-target=\"dropdown1\">\n                  Dropdown\n                <i className=\"material-icons right\">\n                  arrow_drop_down\n                </i>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </React.Fragment>\n  )\n}\n\nexport default Navbar;\n\n\n","import React from 'react';\n\nconst Home = () => {\n\treturn (\n\t\t<div>This is my home page</div>\n\t)\n}\n\nexport default Home;","import React from 'react';\n\nconst AboutMe = () => {\n\n\treturn (\n\t\t<div>This is about me page</div>\n\t)\n}\n\nexport default AboutMe;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport AboutMe from './components/AboutMe';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\" component={ Home } />\n          <Route exact path=\"/about-me\" component={ AboutMe } />\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}